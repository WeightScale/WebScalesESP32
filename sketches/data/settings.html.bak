<!DOCTYPE html>
<html lang='en'>

<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no' />
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <title>Настройки</title>
    <link rel="stylesheet" type="text/css" href="global.css">
    <style>
        input:focus {
            background: #FA6;
            outline: none;
        }

        table {
            width: 100%;
        }
        td{width: 50%;}
        input,
        select {
            width: 100%;
            text-align: right;
            font-size: 18px;
        }

        input[type=submit] {
            width: auto;
            box-shadow: 1px 4px 8px 0px #585858;
        }

        input[type=checkbox] {
            width: auto;
        }
        select {
            width: 100%;
            text-align-last: right;
            font-size: 18px;
            height: auto;
            border: 1px solid #ccc;
        }
        .btxt{
            text-decoration: none;
            box-shadow: 1px 4px 8px 0px #585858;
            padding: 2px;
        }
    </style>
    <script>
        var d = document,w=null;

        function setOnBlur(ip) {
            setTimeout(function() {
                if (d.activeElement === ip) {
                    ip.onblur = function() {
                        if (ip.value.length === 0 || !CheckIP(ip)) {
                            setTimeout(function() {
                                ip.focus()
                            }, 0);
                        } else ip.onblur = null;
                    }
                }
            }, 0)
        }

        function CheckIP(ip) {
            ipParts = ip.value.split(".");
            if (ipParts.length === 4) {
                for (i = 0; i < 4; i++) {
                    TheNum = parseInt(ipParts[i]);
                    if (TheNum >= 0 && TheNum <= 255) {} else break;
                }
                if (i === 4) return true;
            }
            return false;
        }

        function GetValue() {
            var r = new XMLHttpRequest();
            r.overrideMimeType('application/json');
            r.onreadystatechange = function() {
                if (r.readyState === 4) {
                    if (r.status === 200) {
                        var j = JSON.parse(r.responseText);
                        for (e in j) {
                            try {
                                d.getElementById(e).innerHTML = j[e];
                            } catch (e) {}
                        }
                    }
                }
            };
            r.open('GET', '/sv', true);
            r.send(null);
        }

        function GetSettings() {
            var r = new XMLHttpRequest();
            r.overrideMimeType('application/json');
            r.onreadystatechange = function() {
                if (r.readyState === 4) {
                    if (r.status === 200) {
                        try {
                            var j = JSON.parse(r.responseText);
                            var s = j.scale;
                            for (e in s) {
                                try {
                                    if (d.getElementById(e).type === 'checkbox') {
                                        d.getElementById(e).checked = s[e];
                                    } else d.getElementById(e).value = s[e];
                                } catch (e) {}
                            }
                            var sr = j.server;
                            for (en in sr) {
                                try {
                                    d.getElementById(en).value = sr[en];
                                } catch (e) {}
                            }
                            enableAuthFields(document.getElementById('id_auto'));
                        } catch (e) {
                            alert("ОШИБКА " + e.toString());
                        }
                    } else {
                        alert("ДАННЫЕ НАСТРОЕК НЕ НАЙДЕНЫ!!!");
                    }
                    d.body.style.visibility = 'visible';
                    GetValue();
                }
            };
            r.open('GET', '/settings.json', true);
            r.send(null);
        }

        function openSDB() {
            var url = 'https://' + d.getElementById('id_host').value + '/scale.php?code=' + d.getElementById('id_pin').value;
            var win = window.open(url, '_blank');
            win.focus();
        }

        function enableAuthFields(check) {
            if (check.checked) {
                d.getElementById('id_table_net').style.display = 'none';
            } else {
                d.getElementById('id_table_net').style.display = '';
            }
        }

        function formNet(i) {
            var f = new FormData(d.getElementById(i));
            var r = new XMLHttpRequest();
            r.onreadystatechange = function() {
                if (r.readyState === 4) {
                    if (r.status === 200) {
                        var rec = confirm('Перегрузить');
                        if (rec) {
                            r.onreadystatechange = null;
                            r.open('GET', '/rc', true);
                            r.send(null);
                        }
                    } else if (r.status === 400) {
                        alert('Настройки не изменились');
                    }
                }
            };
            r.open('POST', '/settings.html', true);
            r.send(f);
        }
        function ScalesSocket(h, p, fm, fe) {
            var host = h,protocol = p,tw,ts, ws,wTimeout = function() {
                clearTimeout(tw);
                tw = setTimeout(function() {
                    fe();
                }, 7000);
            };
            this.snd = function(c) {
                ws.send(c);
            };
            this.openSocket = function() {
                ws = new WebSocket(host, protocol);
                ws.onopen = function() {
                };
                ws.onclose = function() {
                    clearTimeout(tw);
                    sTimeout();
                    fe();
                };
                ws.onerror = function() {
                    fe();
                };
                ws.onmessage = function(e) {
                    fm(JSON.parse(e.data));
                }
            };
            var sTimeout = function() {
                clearTimeout(ts);
                ts = setTimeout(function() {
                    this.prototype.openSocket();
                }, 5000);
            }
        }
        function scanWifi() {
            w.snd('{"cmd":"scan"}'),document.getElementById("id_stxt").innerHTML = "ПОИСК...",document.getElementById("id_ssid").style.display = "none";
            var e = document.getElementById("id_lssid");
            for (e.style.display = "inline"; e.hasChildNodes();) e.removeChild(e.lastChild)
        }
        function setSSID() {
            var e = document.getElementById("id_lssid");
            document.getElementById("id_ssid").value = e.options[e.selectedIndex].value
        }
        function listSSID(e) {
            for (var t = document.getElementById("id_lssid"), n = 0; n < e.list.length; n++) {
                var a = parseInt(e.list[n].rssi),
                    o = Math.min(Math.max(2 * (a + 100), 0), 100),
                    s = document.createElement("option");
                s.value = e.list[n].ssid,
                    s.innerHTML = e.list[n].ssid + " " + o + "%",
                    t.appendChild(s)
            }
            document.getElementById("id_stxt").innerHTML = "НАЙТИ СЕТЬ:", setSSID()
        }
        function parseCommand(e){
            if (e.hasOwnProperty('cmd')) {
                switch (e.cmd) {
                    case 'ssl':
                        listSSID(e);
                        break;
                }
            }
        }
        window.onload = function() {
            w = new ScalesSocket('ws://' + d.location.host + '/ws', ['arduino'], parseCommand, function() {
                w.openSocket();
            });
            w.openSocket();
            GetSettings();
        };
    </script>
</head>
<body style='visibility: hidden'><a href='/'><img src='und.png' alt="&lt;" class='btn btn--s btn--blue'></a>&nbsp;&nbsp;<strong>НАСТРОЙКИ</strong>
<hr>
<fieldset>
    <details>
        <summary>КОНФИГУРАЦИЯ СЕТИ</summary>
        <form id='form_id' action='javascript:formNet("form_id")'>
            <br>
            <h5 align='left'><b>Имя собственное</b></h5>
            <table>
                <tr>
                    <td>ИМЯ:</td>
                    <td><input id='id_assid' name='assid'> </td>
                </tr>
            </table>
            <br>
            <h5 align='left'><b>Точка доступа WiFi роутера</b></h5>
            <table>
                <tr>
                    <td><a id='id_stxt' class='btxt' href='javascript:scanWifi();'>НАЙТИ СЕТЬ:</a></td>
                    <td>
                          <span>
                            <input id="id_ssid" type="text" name="ssid">
                            <select  style="display:none;" id="id_lssid" onchange="setSSID();"></select>
                          </span>
                    </td>
                </tr>
                <tr>
                    <td>КЛЮЧ:</td>
                    <td>
                        <input id='id_key' type='password' name='key' placeholder='пароль'> </td>
                </tr>
                <tr>
                    <td>Статический IP:</td>
                    <td><input type='checkbox' id='id_auto' name='auto' onclick='enableAuthFields(this);' /></td>
                </tr>
            </table>
            <table id='id_table_net'>
                <tr>
                    <td>IP:</td>
                    <td><input id='id_lan_ip' type='text' name='lan_ip' onfocus='setOnBlur(this)' /></td>
                </tr>
                <tr>
                    <td>ШЛЮЗ:</td>
                    <td><input id='id_gateway' type='text' name='gateway' onfocus='setOnBlur(this)' /></td>
                </tr>
                <tr>
                    <td>МАСКА:</td>
                    <td><input id='id_subnet' type='text' name='subnet' onfocus='setOnBlur(this)' /></td>
                </tr>
            </table>
            <br>
            <input type='submit' value='СОХРАНИТЬ' />
        </form>
    </details>
</fieldset>
<br/>
<fieldset style='width: auto'>
    <details>
        <summary>ОБЩИИ НАСТРОЙКИ</summary>
        <br>
        <form id='form_assid_id' action='javascript:formNet("form_assid_id")'>

        </form>
        <hr>
        <form method='POST'>
            <h5>Настройки база данных интернет</h5>
            <table>
                <tr>
                    <td><a class='btxt' href='javascript:openSDB();'>СЕРВЕР:</a></td>
                    <td><input id='id_host' name='host' placeholder='сервер'> </td>
                </tr>
                <tr>
                    <td>ПИН:</td>
                    <td>
                        <input id='id_pin' name='pin' placeholder='пин весов'> </td>
                </tr>
            </table>
            <br>
            <h5>Доступ к настройкам</h5>
            <table>
                <tr>
                    <td>ИМЯ:</td>
                    <td>
                        <input id='id_n_admin' name='n_admin' placeholder='имя админ'> </td>
                </tr>
                <tr>
                    <td>ПАРОЛЬ:</td>
                    <td>
                        <input type='password' id='id_p_admin' name='p_admin' placeholder='пароль админ'> </td>
                </tr>
            </table>
            <br>
            <input type='submit' value='СОХРАНИТЬ' />
        </form>
        <hr>
        <form method='POST'>

        </form>
    </details>
</fieldset>
<br/>
<fieldset>
    <details>
        <summary>ИНФОРМАЦИЯ</summary>
        <br><span style='font-size: small; font-weight: bold; color: #626262'>
            <table>
              <tr>
                <td>host:</td><td align='right' id='id_local_host'/>
              </tr>
              <tr>
                <td>динамический iP:</td><td align='right' id='id_ip'/>
              </tr>
              <tr>
                <td>точка:</td><td align='right' id='id_ap_ssid'/>
              </tr>
              <tr>
                <td>iP точки:</td> <td align='right' id='id_ap_ip'/>
              </tr>
              <tr>
                <td>mac:</td><td align='right' id='id_mac'/>
              </tr>
              <tr>
                <td>CPU mHz:</td><td align='right' id='chip_v'></td>
              </tr>
              <tr>
                <td>пломба:</td><td align='right'><div id='sl_id'></div></td>
              </tr>
              <tr>
                <td>версия:</td><td align='right'><div id='id_vr'></div></td>
              </tr>
            </table>
            <hr>
              </span>
        <table style="width: auto">
            <tr>
                <td><a href='/calibr.html'><img src='favicon.png' alt="калибровка" class='btn btn--s btn--blue'></a></td>
                <td><a href='/rssi.html'><img src='wifi.png' alt="сигнал" class='btn btn--s btn--blue'></a></td>
                <td><a href='/binfo.html'><img src='btr.png' alt="сигнал" class='btn btn--s btn--blue'></a></td>
            </tr>
        </table>
    </details>
</fieldset>
<hr>
<footer align='center'>2018 © Powered by www.scale.in.ua</footer>
</body>

</html>